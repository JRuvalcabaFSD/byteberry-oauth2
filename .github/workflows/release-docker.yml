name: Release & Docker Publish

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: jruvalcabafsd/byteberry-oauth2

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (Corepack/Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install deps (with devDeps for build)
        run: yarn install --frozen-lockfile

      - name: Build (TS -> JS)
        run: |
          npx rimraf dist || rm -rf dist
          npx tsc -p tsconfig.build.json
          npx tsc-alias -p tsconfig.build.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          GIT_SHA="${GITHUB_SHA::7}"
          VERSION=""
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
          fi
          echo "sha=$GIT_SHA" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          file: ./Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ steps.vars.outputs.version && format('{0}:{1}', env.IMAGE_NAME, steps.vars.outputs.version) || '' }}
            ${{ format('{0}:{1}', env.IMAGE_NAME, steps.vars.outputs.sha) }}
