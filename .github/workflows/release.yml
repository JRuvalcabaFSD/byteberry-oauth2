name: Release & Docker

on:
  push:
    branches: [main]   # solo cuando mergeas a main

permissions:
  contents: write      # semantic-release commitea changelog y package.json
  packages: write

env:
  IMAGE_NAME: jruvalcabafsd/byteberry-oauth2

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.semrel.outputs.new_release_published }}
      version: ${{ steps.semrel.outputs.new_release_version }}
      sha7: ${{ steps.vars.outputs.sha }}
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node (Corepack/Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Compute short sha
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Semantic Release
        id: semrel
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/github
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # permiso por 'contents: write'

  docker:
    needs: release
    if: needs.release.outputs.published == 'true'    # solo si hubo nueva versiÃ³n
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (Corepack/Yarn)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install deps (build TypeScript)
        run: yarn install --frozen-lockfile

      - name: Build (TS -> JS)
        run: |
          npx rimraf dist || rm -rf dist
          npx tsc -p tsconfig.build.json
          npx tsc-alias -p tsconfig.build.json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          file: ./Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ needs.release.outputs.version }}
            ${{ env.IMAGE_NAME }}:${{ needs.release.outputs.sha7 }}
